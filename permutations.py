"""This file loop through the possible reasons and generates all possible keys"""

from itertools import permutations
from itertools import product

def per(letters):
	"""Returns a list of tuples of all possible permutations of a given list, 
	including repeats"""
	
	#letters = ["e", "f", "g", "o", "t"]

	list_of_permuations = []
	for letter in range(len(letters)):
		for permutation in permutations(letters, letter):
			list_of_permuations.append(tuple(sorted(permutation)))
			#print list_of_permuations

	return list_of_permuations
	
def unique_permutations(list_of_permuations):
	"""Returns a list of tuples of possible permuations of a given, and it
	does not include repeats. The function loops through the given list
	and only adds unique permuations to the list. The function then 
	returns a sorted list of the keys."""

	dictionary_of_permuations = {}
	for permuation in range(len(list_of_permuations)):
		if len(list_of_permuations[permuation]) > 0:
			if dictionary_of_permuations.get(list_of_permuations[permuation]):
				dictionary_of_permuations[list_of_permuations[permuation]] += 1
   			else:
   				dictionary_of_permuations[list_of_permuations[permuation]] = 1

   	return sorted(dictionary_of_permuations.keys())


if __name__ == "__main__":
	perm = per(["e", "f", "g", "o", "t"])
	tup = unique_permutations(perm)

# []
# ['e']
# ['f']
# ['g']
# ['o']
# ['t']
# ['e', 'f']
# ['e', 'g']
# ['e', 'o']
# ['e', 't']
# ['e', 'f']
# ['f', 'g']
# ['f', 'o']
# ['f', 't']
# ['e', 'g']
# ['f', 'g']
# ['g', 'o']
# ['g', 't']
# ['e', 'o']
# ['f', 'o']
# ['g', 'o']
# ['o', 't']
# ['e', 't']
# ['f', 't']
# ['g', 't']
# ['o', 't']
# ['e', 'f', 'g']
# ['e', 'f', 'o']
# ['e', 'f', 't']
# ['e', 'f', 'g']
# ['e', 'g', 'o']
# ['e', 'g', 't']
# ['e', 'f', 'o']
# ['e', 'g', 'o']
# ['e', 'o', 't']
# ['e', 'f', 't']
# ['e', 'g', 't']
# ['e', 'o', 't']
# ['e', 'f', 'g']
# ['e', 'f', 'o']
# ['e', 'f', 't']
# ['e', 'f', 'g']
# ['f', 'g', 'o']
# ['f', 'g', 't']
# ['e', 'f', 'o']
# ['f', 'g', 'o']
# ['f', 'o', 't']
# ['e', 'f', 't']
# ['f', 'g', 't']
# ['f', 'o', 't']
# ['e', 'f', 'g']
# ['e', 'g', 'o']
# ['e', 'g', 't']
# ['e', 'f', 'g']
# ['f', 'g', 'o']
# ['f', 'g', 't']
# ['e', 'g', 'o']
# ['f', 'g', 'o']
# ['g', 'o', 't']
# ['e', 'g', 't']
# ['f', 'g', 't']
# ['g', 'o', 't']
# ['e', 'f', 'o']
# ['e', 'g', 'o']
# ['e', 'o', 't']
# ['e', 'f', 'o']
# ['f', 'g', 'o']
# ['f', 'o', 't']
# ['e', 'g', 'o']
# ['f', 'g', 'o']
# ['g', 'o', 't']
# ['e', 'o', 't']
# ['f', 'o', 't']
# ['g', 'o', 't']
# ['e', 'f', 't']
# ['e', 'g', 't']
# ['e', 'o', 't']
# ['e', 'f', 't']
# ['f', 'g', 't']
# ['f', 'o', 't']
# ['e', 'g', 't']
# ['f', 'g', 't']
# ['g', 'o', 't']
# ['e', 'o', 't']
# ['f', 'o', 't']
# ['g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 'o']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'f', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'g', 't']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['e', 'g', 'o', 't']
# ['e', 'f', 'o', 't']
# ['f', 'g', 'o', 't']
# ['e', 'g', 'o', 't']
# ['f', 'g', 'o', 't']

